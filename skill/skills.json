{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  // Find a nearby wood log\n  const log = bot.findBlock({\n    matching: block => {\n      return block.name === \"oak_log\" || block.name === \"birch_log\" || block.name === \"spruce_log\" || block.name === \"jungle_log\" || block.name === \"acacia_log\" || block.name === \"dark_oak_log\" || block.name === \"mangrove_log\";\n    },\n    maxDistance: 32\n  });\n  if (!log) {\n    // If no log is found, explore until a log is found\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const log = bot.findBlock({\n        matching: block => {\n          return block.name === \"oak_log\" || block.name === \"birch_log\" || block.name === \"spruce_log\" || block.name === \"jungle_log\" || block.name === \"acacia_log\" || block.name === \"dark_oak_log\" || block.name === \"mangrove_log\";\n        },\n        maxDistance: 32\n      });\n      return log;\n    });\n  }\n\n  // Mine the wood log\n  await mineBlock(bot, log.name, 1);\n}", "description": "async function mineWoodLog(bot) {\n    // The function is about mining a wood log. It first finds a nearby wood log within a certain distance. If no log is found, it explores the environment until a log is found. Once a log is found, it mines the log.\n}"}, "obtainDarkOakLogs": {"code": "async function obtainDarkOakLogs(bot) {\n  const requiredLogs = 4;\n  const currentLogs = bot.inventory.count(mcData.itemsByName.dark_oak_log.id);\n  if (currentLogs >= requiredLogs) {\n    bot.chat(\"Already have enough dark oak logs.\");\n    return;\n  }\n  const logsToMine = requiredLogs - currentLogs;\n  bot.chat(`Need to mine ${logsToMine} more dark oak logs.`);\n  await mineBlock(bot, \"dark_oak_log\", logsToMine);\n  bot.chat(\"Obtained 4 dark oak logs.\");\n}", "description": "async function obtainDarkOakLogs(bot) {\n    // The function is about obtaining 4 dark oak logs. It checks if there are already 4 dark oak logs in the inventory, and if so, it returns. If not, it calculates how many more logs need to be mined, mines the required number of dark oak logs, and then announces that 4 dark oak logs have been obtained.\n}"}, "craftWoodenPlanks": {"code": "async function craftWoodenPlanks(bot) {\n  const requiredLogs = 1;\n  const currentLogs = bot.inventory.count(mcData.itemsByName.dark_oak_log.id);\n  if (currentLogs >= requiredLogs) {\n    bot.chat(\"Already have enough dark oak logs.\");\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    bot.chat(\"Crafted 4 wooden planks.\");\n  } else {\n    bot.chat(\"Not enough dark oak logs to craft wooden planks.\");\n  }\n}", "description": "async function craftWoodenPlanks(bot) {\n    // The function crafts 4 wooden planks using 1 dark oak log. It checks if there is at least 1 dark oak log in the inventory. If there is, it crafts the wooden planks and saves the event. If there isn't, it sends a message saying there are not enough logs to craft wooden planks.\n}"}, "craftWoodenPickaxe": {"code": "async function craftWoodenPickaxe(bot) {\n  const requiredPlanks = 3;\n  const requiredSticks = 2;\n  const currentPlanks = bot.inventory.count(mcData.itemsByName.dark_oak_planks.id);\n  const currentSticks = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (currentPlanks < requiredPlanks) {\n    const logsNeeded = Math.ceil((requiredPlanks - currentPlanks) / 4);\n    await mineBlock(bot, \"dark_oak_log\", logsNeeded);\n    await craftItem(bot, \"dark_oak_planks\", logsNeeded);\n  }\n  if (currentSticks < requiredSticks) {\n    const planksNeeded = Math.ceil((requiredSticks - currentSticks) / 4);\n    await craftItem(bot, \"stick\", planksNeeded);\n  }\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n  bot.chat(\"Crafted a wooden pickaxe.\");\n}", "description": "async function craftWoodenPickaxe(bot) {\n    // The function crafts a wooden pickaxe by checking the inventory for required materials, and crafting them if they are not available. If a crafting table is not in the inventory, it is crafted and placed. Finally, a wooden pickaxe is crafted and the bot chats that it has been crafted.\n}"}, "mineCobblestone": {"code": "async function mineCobblestone(bot) {\n  // Check if the bot has a wooden_pickaxe in the inventory\n  const woodenPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.wooden_pickaxe.id);\n\n  // If not, call the craftWoodenPickaxe function to craft a wooden pickaxe\n  if (!woodenPickaxe) {\n    await craftWoodenPickaxe(bot);\n  }\n\n  // Equip the wooden_pickaxe\n  await bot.equip(mcData.itemsByName.wooden_pickaxe.id, \"hand\");\n\n  // Mine 10 cobblestone\n  await mineBlock(bot, \"stone\", 10);\n  bot.chat(\"Mined 10 cobblestone.\");\n}", "description": "async function mineCobblestone(bot) {\n    // The function is about mining 10 cobblestones using a wooden pickaxe. First check if a wooden pickaxe is in the inventory. If not, craft one. Equip the wooden pickaxe in the hand and mine 10 cobblestone blocks using the wooden pickaxe.\n}"}, "craftStonePickaxe": {"code": "async function craftStonePickaxe(bot) {\n  // Check if the bot has a crafting table in the inventory\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n\n  // If not, craft one\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n\n  // Place the crafting table near the bot\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n\n  // Craft a stone pickaxe using the crafting table\n  await craftItem(bot, \"stone_pickaxe\", 1);\n  bot.chat(\"Crafted a stone pickaxe.\");\n}", "description": "async function craftStonePickaxe(bot) {\n    // The function crafts a stone pickaxe using a crafting table. If the bot does not have a crafting table in the inventory, it mines a dark oak log and crafts a crafting table. Then, it places the crafting table near the bot and crafts a stone pickaxe using the crafting table. Finally, it sends a chat message indicating that a stone pickaxe has been crafted.\n}"}, "mineCoalOres": {"code": "async function mineCoalOres(bot) {\n  // Check if the bot has a stone_pickaxe in the inventory\n  const stonePickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.stone_pickaxe.id);\n\n  // If not, call the craftStonePickaxe function to craft a stone pickaxe\n  if (!stonePickaxe) {\n    await craftStonePickaxe(bot);\n  }\n\n  // Equip the stone_pickaxe\n  await bot.equip(mcData.itemsByName.stone_pickaxe.id, \"hand\");\n\n  // Explore until finding a coal_ore\n  await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const coal_ore = bot.findBlock({\n      matching: mcData.blocksByName[\"coal_ore\"].id,\n      maxDistance: 32\n    });\n    return coal_ore;\n  });\n\n  // Mine 5 coal ores\n  await mineBlock(bot, \"coal_ore\", 5);\n  bot.chat(\"Mined 5 coal ores.\");\n}", "description": "async function mineCoalOres(bot) {\n    // The function is about mining 5 coal ores using a stone pickaxe. First, check if the bot has a stone pickaxe in the inventory. If not, call the `craftStonePickaxe` function to craft one. Then, equip the stone pickaxe in the hand. Next, explore the environment until finding a coal ore block. Once a coal ore block is found, mine a total of 5 coal ores using the stone pickaxe. Finally, the bot will chat that it has mined 5 coal ores.\n}"}, "mineAdditionalCoalOres": {"code": "async function mineAdditionalCoalOres(bot) {\n  // Equip the stone_pickaxe\n  await bot.equip(mcData.itemsByName.stone_pickaxe.id, \"hand\");\n\n  // Explore until finding a coal_ore\n  await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const coal_ore = bot.findBlock({\n      matching: mcData.blocksByName[\"coal_ore\"].id,\n      maxDistance: 32\n    });\n    return coal_ore;\n  });\n\n  // Mine 5 coal ores\n  await mineBlock(bot, \"coal_ore\", 5);\n  bot.chat(\"Mined 5 additional coal ores.\");\n}", "description": "async function mineAdditionalCoalOres(bot) {\n    // The function is about mining 5 coal ores using a stone pickaxe. First, equip the stone pickaxe in the hand. Next, explore the environment until finding a coal ore block. Once a coal ore block is found, mine a total of 5 coal ores using the stone pickaxe. Finally, a message is sent to the chat indicating that 5 additional coal ores have been mined.\n}"}}