{"mineWoodLog": {"code": "async function mineWoodLog(bot) {\n  // Find a nearby wood log\n  const log = bot.findBlock({\n    matching: block => {\n      return block.name === \"oak_log\" || block.name === \"birch_log\" || block.name === \"spruce_log\" || block.name === \"jungle_log\" || block.name === \"acacia_log\" || block.name === \"dark_oak_log\" || block.name === \"mangrove_log\";\n    },\n    maxDistance: 32\n  });\n  if (!log) {\n    // If no log is found, explore until a log is found\n    await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n      const log = bot.findBlock({\n        matching: block => {\n          return block.name === \"oak_log\" || block.name === \"birch_log\" || block.name === \"spruce_log\" || block.name === \"jungle_log\" || block.name === \"acacia_log\" || block.name === \"dark_oak_log\" || block.name === \"mangrove_log\";\n        },\n        maxDistance: 32\n      });\n      return log;\n    });\n  }\n\n  // Mine the wood log\n  await mineBlock(bot, log.name, 1);\n}", "description": "async function mineWoodLog(bot) {\n    // The function is about mining a wood log. It first finds a nearby wood log within a certain distance. If no log is found, it explores the environment until a log is found. Once a log is found, it mines the log.\n}"}, "obtainDarkOakLogs": {"code": "async function obtainDarkOakLogs(bot) {\n  const requiredLogs = 4;\n  const currentLogs = bot.inventory.count(mcData.itemsByName.dark_oak_log.id);\n  if (currentLogs >= requiredLogs) {\n    bot.chat(\"Already have enough dark oak logs.\");\n    return;\n  }\n  const logsToMine = requiredLogs - currentLogs;\n  bot.chat(`Need to mine ${logsToMine} more dark oak logs.`);\n  await mineBlock(bot, \"dark_oak_log\", logsToMine);\n  bot.chat(\"Obtained 4 dark oak logs.\");\n}", "description": "async function obtainDarkOakLogs(bot) {\n    // The function is about obtaining 4 dark oak logs. It checks if there are already 4 dark oak logs in the inventory, and if so, it returns. If not, it calculates how many more logs need to be mined, mines the required number of dark oak logs, and then announces that 4 dark oak logs have been obtained.\n}"}, "craftWoodenPlanks": {"code": "async function craftWoodenPlanks(bot) {\n  const requiredLogs = 1;\n  const currentLogs = bot.inventory.count(mcData.itemsByName.dark_oak_log.id);\n  if (currentLogs >= requiredLogs) {\n    bot.chat(\"Already have enough dark oak logs.\");\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    bot.chat(\"Crafted 4 wooden planks.\");\n  } else {\n    bot.chat(\"Not enough dark oak logs to craft wooden planks.\");\n  }\n}", "description": "async function craftWoodenPlanks(bot) {\n    // The function crafts 4 wooden planks using 1 dark oak log. It checks if there is at least 1 dark oak log in the inventory. If there is, it crafts the wooden planks and saves the event. If there isn't, it sends a message saying there are not enough logs to craft wooden planks.\n}"}, "craftWoodenPickaxe": {"code": "async function craftWoodenPickaxe(bot) {\n  const requiredPlanks = 3;\n  const requiredSticks = 2;\n  const currentPlanks = bot.inventory.count(mcData.itemsByName.dark_oak_planks.id);\n  const currentSticks = bot.inventory.count(mcData.itemsByName.stick.id);\n  if (currentPlanks < requiredPlanks) {\n    const logsNeeded = Math.ceil((requiredPlanks - currentPlanks) / 4);\n    await mineBlock(bot, \"dark_oak_log\", logsNeeded);\n    await craftItem(bot, \"dark_oak_planks\", logsNeeded);\n  }\n  if (currentSticks < requiredSticks) {\n    const planksNeeded = Math.ceil((requiredSticks - currentSticks) / 4);\n    await craftItem(bot, \"stick\", planksNeeded);\n  }\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n  await craftItem(bot, \"wooden_pickaxe\", 1);\n  bot.chat(\"Crafted a wooden pickaxe.\");\n}", "description": "async function craftWoodenPickaxe(bot) {\n    // The function crafts a wooden pickaxe by checking the inventory for required materials, and crafting them if they are not available. If a crafting table is not in the inventory, it is crafted and placed. Finally, a wooden pickaxe is crafted and the bot chats that it has been crafted.\n}"}, "mineCobblestone": {"code": "async function mineCobblestone(bot) {\n  // Check if the bot has a wooden_pickaxe in the inventory\n  const woodenPickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.wooden_pickaxe.id);\n\n  // If not, call the craftWoodenPickaxe function to craft a wooden pickaxe\n  if (!woodenPickaxe) {\n    await craftWoodenPickaxe(bot);\n  }\n\n  // Equip the wooden_pickaxe\n  await bot.equip(mcData.itemsByName.wooden_pickaxe.id, \"hand\");\n\n  // Mine 10 cobblestone\n  await mineBlock(bot, \"stone\", 10);\n  bot.chat(\"Mined 10 cobblestone.\");\n}", "description": "async function mineCobblestone(bot) {\n    // The function is about mining 10 cobblestones using a wooden pickaxe. First check if a wooden pickaxe is in the inventory. If not, craft one. Equip the wooden pickaxe in the hand and mine 10 cobblestone blocks using the wooden pickaxe.\n}"}, "craftStonePickaxe": {"code": "async function craftStonePickaxe(bot) {\n  // Check if the bot has a crafting table in the inventory\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n\n  // If not, craft one\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n\n  // Place the crafting table near the bot\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n\n  // Craft a stone pickaxe using the crafting table\n  await craftItem(bot, \"stone_pickaxe\", 1);\n  bot.chat(\"Crafted a stone pickaxe.\");\n}", "description": "async function craftStonePickaxe(bot) {\n    // The function crafts a stone pickaxe using a crafting table. If the bot does not have a crafting table in the inventory, it mines a dark oak log and crafts a crafting table. Then, it places the crafting table near the bot and crafts a stone pickaxe using the crafting table. Finally, it sends a chat message indicating that a stone pickaxe has been crafted.\n}"}, "mineCoalOres": {"code": "async function mineCoalOres(bot) {\n  // Check if the bot has a stone_pickaxe in the inventory\n  const stonePickaxe = bot.inventory.findInventoryItem(mcData.itemsByName.stone_pickaxe.id);\n\n  // If not, call the craftStonePickaxe function to craft a stone pickaxe\n  if (!stonePickaxe) {\n    await craftStonePickaxe(bot);\n  }\n\n  // Equip the stone_pickaxe\n  await bot.equip(mcData.itemsByName.stone_pickaxe.id, \"hand\");\n\n  // Explore until finding a coal_ore\n  await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const coal_ore = bot.findBlock({\n      matching: mcData.blocksByName[\"coal_ore\"].id,\n      maxDistance: 32\n    });\n    return coal_ore;\n  });\n\n  // Mine 5 coal ores\n  await mineBlock(bot, \"coal_ore\", 5);\n  bot.chat(\"Mined 5 coal ores.\");\n}", "description": "async function mineCoalOres(bot) {\n    // The function is about mining 5 coal ores using a stone pickaxe. First, check if the bot has a stone pickaxe in the inventory. If not, call the `craftStonePickaxe` function to craft one. Then, equip the stone pickaxe in the hand. Next, explore the environment until finding a coal ore block. Once a coal ore block is found, mine a total of 5 coal ores using the stone pickaxe. Finally, the bot will chat that it has mined 5 coal ores.\n}"}, "mineAdditionalCoalOres": {"code": "async function mineAdditionalCoalOres(bot) {\n  // Equip the stone_pickaxe\n  await bot.equip(mcData.itemsByName.stone_pickaxe.id, \"hand\");\n\n  // Explore until finding a coal_ore\n  await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const coal_ore = bot.findBlock({\n      matching: mcData.blocksByName[\"coal_ore\"].id,\n      maxDistance: 32\n    });\n    return coal_ore;\n  });\n\n  // Mine 5 coal ores\n  await mineBlock(bot, \"coal_ore\", 5);\n  bot.chat(\"Mined 5 additional coal ores.\");\n}", "description": "async function mineAdditionalCoalOres(bot) {\n    // The function is about mining 5 coal ores using a stone pickaxe. First, equip the stone pickaxe in the hand. Next, explore the environment until finding a coal ore block. Once a coal ore block is found, mine a total of 5 coal ores using the stone pickaxe. Finally, a message is sent to the chat indicating that 5 additional coal ores have been mined.\n}"}, "craftFurnace": {"code": "async function craftFurnace(bot) {\n  // Check if the bot has a crafting table in the inventory\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n\n  // If not, mine a dark_oak_log, craft dark_oak_planks, and then craft a crafting table\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n\n  // Place the crafting table near the bot\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n\n  // Check if the bot has enough cobblestone in the inventory\n  const cobblestoneCount = bot.inventory.count(mcData.itemsByName.cobblestone.id);\n\n  // If not, mine more cobblestone until there are at least 8 cobblestones in the inventory\n  if (cobblestoneCount < 8) {\n    await mineBlock(bot, \"stone\", 8 - cobblestoneCount);\n    bot.chat(\"Mined enough cobblestone to craft a furnace.\");\n  }\n\n  // Craft a furnace using the crafting table\n  await craftItem(bot, \"furnace\", 1);\n  bot.chat(\"Crafted a furnace.\");\n}", "description": "async function craftFurnace(bot) {\n    // The function is about crafting a furnace. If the bot does not have a crafting table in the inventory, it will mine a dark oak log, craft dark oak planks, and then craft a crafting table. After placing the crafting table near the bot, it will check if there is enough cobblestone in the inventory. If not, it will mine more cobblestone until there are at least 8 cobblestones in the inventory. Finally, it will craft a furnace using the crafting table.\n}"}, "checkTaskCompletion": {"code": "async function checkTaskCompletion(bot) {\n  bot.chat(\"Task already completed. 10 coal ores have been mined.\");\n}", "description": "async function checkTaskCompletion(bot) {\n    // The function simply sends a chat message indicating that the task has already been completed, which is mining 10 coal ores.\n}"}, "killAnimalForFood": {"code": "async function killAnimalForFood(bot) {\n  // Equip the stone_pickaxe\n  await bot.equip(mcData.itemsByName.stone_pickaxe.id, \"hand\");\n\n  // Explore until finding an animal (cow, pig, chicken, or sheep)\n  const animal = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const animal = bot.nearestEntity(entity => {\n      return [\"cow\", \"pig\", \"chicken\", \"sheep\"].includes(entity.name) && entity.position.distanceTo(bot.entity.position) < 32;\n    });\n    return animal;\n  });\n\n  // Kill the animal using the killMob function\n  await killMob(bot, animal.name, 300);\n\n  // Collect the dropped item (meat)\n  await bot.pathfinder.goto(new GoalBlock(animal.position.x, animal.position.y, animal.position.z));\n  bot.chat(\"Killed an animal for food.\");\n}", "description": "async function killAnimalForFood(bot) {\n    // The function is about killing an animal (cow, pig, chicken, or sheep) for food. It equips a stone pickaxe and explores the environment until finding an animal within 32 blocks. Once an animal is found, it kills the animal using the `killMob` function and collects the dropped item (meat). Finally, it moves to the location of the animal and sends a chat message indicating that an animal has been killed for food.\n}"}, "craftTorches": {"code": "async function craftTorches(bot) {\n  // Check if the bot has a crafting table in the inventory\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n\n  // If not, mine a dark_oak_log, craft dark_oak_planks, and then craft a crafting table\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n\n  // Place the crafting table near the bot\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n\n  // Check if the bot has enough sticks and coal in the inventory\n  const requiredSticks = 1;\n  const requiredCoal = 1;\n  const currentSticks = bot.inventory.count(mcData.itemsByName.stick.id);\n  const currentCoal = bot.inventory.count(mcData.itemsByName.coal.id);\n\n  // If not, mine dark_oak_log and craft dark_oak_planks, then craft sticks\n  if (currentSticks < requiredSticks) {\n    const logsNeeded = Math.ceil((requiredSticks - currentSticks) / 4);\n    await mineBlock(bot, \"dark_oak_log\", logsNeeded);\n    await craftItem(bot, \"dark_oak_planks\", logsNeeded);\n    await craftItem(bot, \"stick\", logsNeeded);\n  }\n\n  // If not, mine coal_ore to collect coal\n  if (currentCoal < requiredCoal) {\n    await mineBlock(bot, \"coal_ore\", requiredCoal - currentCoal);\n  }\n\n  // Craft 4 torches using the crafting table\n  await craftItem(bot, \"torch\", 1);\n  bot.chat(\"Crafted 4 torches.\");\n}", "description": "async function craftTorches(bot) {\n    // The function is about crafting torches using a crafting table. If the bot does not have a crafting table in the inventory, it will mine a dark oak log, craft dark oak planks, and then craft a crafting table. After placing the crafting table near the bot, it will check if there are enough sticks and coal in the inventory. If not, it will mine dark oak logs and coal ore to collect the required materials. Finally, it will craft 4 torches using the crafting table.\n}"}, "craftWoodenSword": {"code": "async function craftWoodenSword(bot) {\n  // Check if the bot has a crafting table in the inventory\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n\n  // If not, mine a dark_oak_log, craft dark_oak_planks, and then craft a crafting table\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n\n  // Use exploreUntil to find a suitable block to place the crafting table on\n  const suitableBlock = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const offsets = [new Vec3(1, 0, 0), new Vec3(-1, 0, 0), new Vec3(0, 0, 1), new Vec3(0, 0, -1)];\n    for (const offset of offsets) {\n      const block = bot.blockAt(bot.entity.position.plus(offset));\n      if (block && block.name !== \"air\" && block.name !== \"grass\") {\n        return block;\n      }\n    }\n    return null;\n  });\n\n  // Place the crafting table on the suitable block\n  await placeItem(bot, \"crafting_table\", suitableBlock.position.offset(0, 1, 0));\n\n  // Check if the bot has enough dark_oak_planks and sticks in the inventory\n  const requiredPlanks = 2;\n  const requiredSticks = 1;\n  const currentPlanks = bot.inventory.count(mcData.itemsByName.dark_oak_planks.id);\n  const currentSticks = bot.inventory.count(mcData.itemsByName.stick.id);\n\n  // If not, mine dark_oak_log and craft dark_oak_planks, then craft sticks\n  if (currentPlanks < requiredPlanks) {\n    const logsNeeded = Math.ceil((requiredPlanks - currentPlanks) / 4);\n    await mineBlock(bot, \"dark_oak_log\", logsNeeded);\n    await craftItem(bot, \"dark_oak_planks\", logsNeeded);\n  }\n  if (currentSticks < requiredSticks) {\n    const planksNeeded = Math.ceil((requiredSticks - currentSticks) / 4);\n    await craftItem(bot, \"stick\", planksNeeded);\n  }\n\n  // Craft a wooden sword using the crafting table\n  await craftItem(bot, \"wooden_sword\", 1);\n  bot.chat(\"Crafted a wooden sword.\");\n}", "description": "async function craftWoodenSword(bot) {\n    // The function crafts a wooden sword using a crafting table. If the bot does not have a crafting table in the inventory, it mines a dark oak log, crafts dark oak planks, and then crafts a crafting table. It then finds a suitable block to place the crafting table on and places it. The function checks if the bot has enough dark oak planks and sticks in the inventory. If not, it mines dark oak logs and crafts dark oak planks, then crafts sticks. Finally, it crafts a wooden sword using the crafting table.\n}"}, "cookBeefInFurnace": {"code": "async function cookBeefInFurnace(bot) {\n  // Find a suitable block to place the furnace on\n  const suitableBlock = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const offsets = [new Vec3(1, 0, 0), new Vec3(-1, 0, 0), new Vec3(0, 0, 1), new Vec3(0, 0, -1)];\n    for (const offset of offsets) {\n      const block = bot.blockAt(bot.entity.position.plus(offset));\n      if (block && block.name !== \"air\" && block.name !== \"grass\") {\n        return block;\n      }\n    }\n    return null;\n  });\n\n  // Place the furnace on the suitable block\n  await placeItem(bot, \"furnace\", suitableBlock.position.offset(0, 1, 0));\n\n  // Cook the 3 beef in the furnace using coal as fuel\n  await smeltItem(bot, \"beef\", \"coal\", 3);\n  bot.chat(\"Cooked 3 beef in the furnace.\");\n}", "description": "async function cookBeefInFurnace(bot) {\n    // The function is about cooking 3 beef in a furnace using coal as fuel. First, it explores the environment to find a suitable block to place the furnace on. Once a suitable block is found, it places the furnace on top of it. Then, it cooks the beef in the furnace using coal as fuel. Finally, it sends a chat message indicating that 3 beef have been cooked in the furnace.\n}"}, "mineIronOres": {"code": "async function mineIronOres(bot) {\n  // Equip the stone_pickaxe\n  await bot.equip(mcData.itemsByName.stone_pickaxe.id, \"hand\");\n\n  // Explore until finding an iron_ore\n  await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const iron_ore = bot.findBlock({\n      matching: mcData.blocksByName[\"iron_ore\"].id,\n      maxDistance: 32\n    });\n    return iron_ore;\n  });\n\n  // Mine 5 iron ores\n  await mineBlock(bot, \"iron_ore\", 5);\n  bot.chat(\"Mined 5 iron ores.\");\n}", "description": "async function mineIronOres(bot) {\n    // The function is about mining 5 iron ores using a stone pickaxe. The function equips the stone pickaxe in the hand and explores the environment until finding an iron ore block. Once an iron ore block is found, the function mines a total of 5 iron ores using the stone pickaxe and sends a chat message indicating the successful mining.\n}"}, "smeltRawIron": {"code": "async function smeltRawIron(bot) {\n  // Find a suitable block to place the furnace on\n  const suitableBlock = await exploreUntil(bot, new Vec3(1, 0, 1), 60, () => {\n    const offsets = [new Vec3(1, 0, 0), new Vec3(-1, 0, 0), new Vec3(0, 0, 1), new Vec3(0, 0, -1)];\n    for (const offset of offsets) {\n      const block = bot.blockAt(bot.entity.position.plus(offset));\n      if (block && block.name !== \"air\" && block.name !== \"grass\") {\n        return block;\n      }\n    }\n    return null;\n  });\n\n  // Place the furnace on the suitable block\n  await placeItem(bot, \"furnace\", suitableBlock.position.offset(0, 1, 0));\n\n  // Smelt the 7 raw iron in the furnace using coal as fuel\n  await smeltItem(bot, \"raw_iron\", \"coal\", 7);\n  bot.chat(\"Smelted 7 raw iron in the furnace.\");\n}", "description": "async function smeltRawIron(bot) {\n    // The function is about smelting 7 raw iron using a furnace and coal as fuel. First, it finds a suitable block to place the furnace on by exploring the environment. Once a suitable block is found, it places the furnace on top of it. Then, it smelts 7 raw iron in the furnace using coal as fuel. Finally, it sends a chat message indicating that 7 raw iron has been smelted in the furnace.\n}"}, "craftIronPickaxe": {"code": "async function craftIronPickaxe(bot) {\n  // Check if the bot has a crafting table in the inventory\n  const craftingTable = bot.inventory.findInventoryItem(mcData.itemsByName.crafting_table.id);\n\n  // If not, mine a dark_oak_log, craft dark_oak_planks, and then craft a crafting table\n  if (!craftingTable) {\n    await mineBlock(bot, \"dark_oak_log\", 1);\n    await craftItem(bot, \"dark_oak_planks\", 1);\n    await craftItem(bot, \"crafting_table\", 1);\n  }\n\n  // Place the crafting table near the bot\n  const craftingTablePosition = bot.entity.position.offset(1, 0, 0);\n  await placeItem(bot, \"crafting_table\", craftingTablePosition);\n\n  // Craft an iron pickaxe using the crafting table\n  await craftItem(bot, \"iron_pickaxe\", 1);\n  bot.chat(\"Crafted an iron pickaxe.\");\n}", "description": "async function craftIronPickaxe(bot) {\n    // The function crafts an iron pickaxe using a crafting table. If the bot does not have a crafting table in the inventory, it mines a dark oak log, crafts dark oak planks, and then crafts a crafting table. After placing the crafting table near the bot, it crafts an iron pickaxe using the crafting table.\n}"}}